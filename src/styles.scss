@use 'sass:color';
@use 'sass:math';
@use 'variables' as vars;
@use 'mixins' as mix;

/* Allgemeine Reset-Styles */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;

  text-rendering: geometricPrecision;
}

body {
  background-color: vars.$background-color;
  color: vars.$text-color;
  font-family: vars.$font-family;
  margin: 0;
  padding: 0;
}


a {
  color: vars.$link-color;
  text-decoration: none;
  transition: color 0.3s ease-in-out;

  &:hover {
    color: vars.$accent-color-dark;
  }
}



// Basis Button-Stil
.btn-base {
  display: inline-block;
  padding: vars.$padding-small vars.$padding-medium;
  border-radius: vars.$border-radius;
  font-family: vars.$font-family;
  font-size: vars.$font-size-base;
  font-weight: vars.$font-weight-bold;
  text-align: center;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  position: relative;
  overflow: hidden;
  outline: none;
  
  &:focus-visible {
    box-shadow: 0 0 0 3px rgba(vars.$accent-color, 0.5);
  }
  
  // Ripple-Effekt für Buttons
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    transition: width 0.6s ease, height 0.6s ease, opacity 0.6s ease;
  }
  
  &:active::after {
    width: 300px;
    height: 300px;
    opacity: 1;
    transition: 0s;
  }
}

// Primärer Button (Haupt-CTA)
.btn-primary {
  @extend .btn-base;
  background: linear-gradient(45deg, vars.$accent-color, vars.$accent-color-dark);
  color: white;
  border: none;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
  }
  
  &:active {
    transform: translateY(-1px);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }
  
  &:disabled {
    background: linear-gradient(45deg, color.scale(vars.$accent-color, $lightness: 20%), color.scale(vars.$accent-color-dark, $lightness: 20%));
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }
}

// Sekundärer Button (Outline)
.btn-outline {
  @extend .btn-base;
  background: transparent;
  color: vars.$accent-color;
  border: 2px solid vars.$accent-color;
  
  &:hover {
    background: rgba(vars.$accent-color, 0.1);
    transform: translateY(-3px);
  }
  
  &:active {
    transform: translateY(-1px);
  }
  
  &:disabled {
    color: color.scale(vars.$accent-color, $lightness: 20%);
    border-color: color.scale(vars.$accent-color, $lightness: 20%);
    cursor: not-allowed;
    transform: none;
  }
}

// Text Button (Link-ähnlich)
.btn-text {
  @extend .btn-base;
  background: transparent;
  color: vars.$accent-color;
  border: none;
  padding: vars.$padding-small;
  
  &:hover {
    color: vars.$accent-color-dark;
    background: rgba(vars.$accent-color, 0.05);
  }
  
  &:disabled {
    color: color.scale(vars.$accent-color, $lightness: 20%);
    cursor: not-allowed;
  }
}

// Ikonischer Button
.btn-icon {
  @extend .btn-base;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  
  .material-icons {
    font-size: 1.2em;
    transition: transform 0.3s ease;
  }
  
  &:hover .material-icons {
    transform: translateX(3px);
  }
}

// Erweiterte Versionen mit Größen
.btn-lg {
  padding: vars.$padding-medium vars.$padding-large;
  font-size: vars.$font-size-medium;
}

.btn-sm {
  padding: vars.$padding-extra-small vars.$padding-small;
  font-size: vars.$font-size-small;
}

// Überarbeitung der vorhandenen Button-Klassen für Rückwärtskompatibilität
.btn-cta {
  @extend .btn-primary;
  @extend .btn-lg;
  text-transform: uppercase;
  // Behält die Eigenschaften der ursprünglichen Animation bei
  animation: gradientShift 5s ease infinite;
}

.brk-btn {
  @extend .btn-outline;
  // Behält den speziellen Effekt für Rückwärtskompatibilität
  position: relative;
  
  &::before, &::after {
    content: "";
    display: block;
    position: absolute;
    width: 10%;
    background: vars.$background-whiter;
    height: 0.3em;
    transition: all 0.45s cubic-bezier(0.86, 0, 0.07, 1);
  }
  
  &::before {
    right: 20%;
    top: -0.21em;
    transform: skewX(-45deg);
  }
  
  &::after {
    left: 20%;
    bottom: -0.25em;
    transform: skewX(45deg);
  }
  
  &:hover {
    &::before { right: 80%; }
    &::after { left: 80%; }
  }
}

.underlined-a {
  @extend .btn-text;
  padding: 0;
  box-shadow: inset 0 -1px 0 vars.$info-color;
  
  &:hover {
    color: vars.$text-color-white;
    box-shadow: inset 0 -2.2rem 0 vars.$info-color;
  }
}




// Verhindere Scrollen, wenn Mobile-Menü geöffnet ist
body.no-scroll {
  overflow: hidden;
  position: fixed;
  width: 100%;
  height: 100vh;
  touch-action: none;
}

// Scrollbar-Styling verbessern
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.05);
}

::-webkit-scrollbar-thumb {
  background: rgba(vars.$accent-color, 0.5);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(vars.$accent-color, 0.7);
}

// Grundlegende Transitions für alle interaktiven Elemente
a, button, input, select, textarea, .dropdown, .btn {
  transition: all 0.3s ease;
}

// Verbesserte Focus-Styles für Barrierefreiheit
a:focus-visible, button:focus-visible, input:focus-visible,
select:focus-visible, textarea:focus-visible, .dropdown:focus-visible {
  outline: 2px solid vars.$accent-color;
  outline-offset: 2px;
  box-shadow: 0 0 0 4px rgba(vars.$accent-color, 0.3);
}

// Smooth Scrolling für die gesamte Seite
html {
  scroll-behavior: smooth;
}

// Animations-Utilities
.fade-in {
  animation: fadeIn 0.5s ease forwards;
}

.slide-in-left {
  animation: slideInLeft 0.5s ease forwards;
}

.slide-in-right {
  animation: slideInRight 0.5s ease forwards;
}

.slide-in-up {
  animation: slideInUp 0.5s ease forwards;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideInLeft {
  from { transform: translateX(-30px); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes slideInRight {
  from { transform: translateX(30px); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes slideInUp {
  from { transform: translateY(30px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

// Verbesserte mobile Darstellung für Touch-Geräte
@media (max-width: vars.$mobile) {
  input, select, textarea, button, a {
    font-size: 16px !important; // Verhindert Zoom auf iOS
    min-height: 44px; // Bessere Touch-Ziele
  }
  
  button, a.btn, .action-btn {
    padding: 10px 15px;
    min-width: 44px;
  }
}