@use 'sass:color';
@use 'variables' as vars;
@use 'mixins' as mix;

.gallery-page {
  max-width: 1200px;
  margin: 3rem auto;
  padding: vars.$padding-medium;
  background-color: vars.$background-color;
  border-radius: vars.$border-radius-large;
  box-shadow: vars.$shadow;
  text-align: center;

  h2 {
    font-size: vars.$font-size-xlarge;
    margin-bottom: vars.$padding-medium;
    color: vars.$text-color;
  }

  .loading,
  .error-message,
  .no-artworks {
    font-size: vars.$font-size-large;
    color: vars.$text-color;
    font-weight: bold;
    padding: vars.$padding-medium;
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: vars.$padding-medium;
  }

  .artwork {
    position: relative;
    overflow: hidden;
    border-radius: vars.$border-radius;

    .image-container {
      position: relative;
      width: 100%;
      padding-top: 75%;
      background-color: #e0e0e0;

      img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease-in-out;
      }

      &:hover img {
        transform: scale(1.05);
      }

      .overlay {
        position: absolute;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        color: #fff;
        width: 100%;
        transform: translateY(100%);
        transition: transform 0.3s ease-in-out;
        padding: vars.$padding-small;

        .text {
          text-align: center;
          font-size: vars.$font-size-base;
          font-weight: bold;
        }
      }

      &:hover .overlay {
        transform: translateY(0);
      }
    }
  }
}

/* ðŸ“± Responsive Anpassungen */
@media (max-width: vars.$tablet) {
  .gallery-grid {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }
}

@media (max-width: vars.$mobile) {
  .gallery-grid {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  }
}
