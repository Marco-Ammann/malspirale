@use "variables" as vars;
@use "mixins" as mixins;

.hero {
  // Passt die Höhe an den Header an
  height: calc(100vh - vars.$header-height);
  display: flex;
  flex-wrap: wrap; // Für responsive Verhalten
  overflow: hidden;
  background: linear-gradient(
      135deg,
      vars.$primary-color 0%,
      vars.$color-quaternary 25%,
      vars.$background-whiter 50%
    );
  position: relative;

  // Linke Spalte (Text)
  .hero-left {
    display: flex;
    align-items: center;
    flex: 1 1 50%;
    background: transparent;
    padding: vars.$padding-extra-large;
    position: relative;
    z-index: 1;

    .hero-content {
      max-width: 600px;
      text-align: left;
      padding: vars.$padding-large;
      z-index: 1;

      .hero-title {
        font-family: vars.$font-family-heading;
        font-size: vars.$hero-title-size-large; // z.B. 3.5rem
        color: vars.$accent-color-dark;
        margin-bottom: vars.$padding-medium;
        line-height: 1.2;
      }

      .hero-subtitle {
        font-size: vars.$hero-subtitle-size-large; // oder vars.$hero-subtitle-size
        color: vars.$text-color;
        margin-bottom: vars.$padding-large;
        line-height: vars.$line-height-large;
      }
      .btn {
        display: inline-block;
        text-align: center;
        padding: vars.$padding-small vars.$padding-medium;
        font-family: vars.$font-family;
        font-size: vars.$font-size-base;
        border: none;
        border-radius: vars.$border-radius;
        cursor: pointer;
        transition: background 0.3s ease, transform 0.3s ease,
          box-shadow 0.3s ease;
      }
      .btn-cta {
        @extend .btn !optional; // Für globale Button-Styles, sonst optional
        background: linear-gradient(
          45deg,
          vars.$primary-color,
          vars.$accent-color
        );
        color: vars.$background-color;
        font-size: vars.$font-size-large;
        padding: vars.$padding-medium vars.$padding-large;
        border-radius: vars.$border-radius;
        text-transform: uppercase;
        transition: transform 0.3s ease, box-shadow 0.3s ease;

        &:hover {
          transform: translateY(-2px);
          box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
        }
      }
    }
  }

  // Rechte Spalte (Bild mit diagonalem Clip-Path)
  .hero-right {
    flex: 1 1 50%;
    position: absolute;
    height: calc(100vh - vars.$header-height);
    width: 65%;
    top: 0;
    right: 0;
    background: url("/assets/images/hero10.webp") no-repeat center center/cover;
    // Optional: Abdunkeln
    filter: brightness(0.9);
    clip-path: polygon(20% 0%, 100% 0%, 100% 100%, 0% 100%);
    // Erzeugt eine dynamische schräge Kante
    // Passe die Werte der polygon-Punkte an, um mehr/weniger Schräge zu bekommen
  }

  // Responsive Anpassungen
  @media (max-width: 1200px) {
    .hero {
      text-align: center;
    }
    .hero-left {      
      justify-content: center;
      align-items: center;
    }
    .hero-left .hero-content {
      background: vars.$background-color;
      border-radius: vars.$border-radius;
      opacity: 0.7;
      backdrop-filter: blur(10px);
      width: 100%;
      text-align: center;

      .hero-title {
        font-size: vars.$hero-title-size;
      }
  
      .hero-subtitle {
        font-size: vars.$hero-subtitle-size;
      }
    }

    .hero-right {
      width: 100%;
      clip-path: none;
      background: url("/assets/images/hero10.webp") no-repeat fixed center/cover;
    }
  }

  @media (max-width: vars.$tablet) {
    flex-direction: column;

    .hero-left .hero-content {
      text-align: center;
      padding: vars.$padding-medium;
      background-color: vars.$background-color;
      border-radius: vars.$border-radius;
    }
    .hero-right {
      position: absolute;
      width: 100%;
      z-index: 0;
      clip-path: none;
    }
  }

  @media (max-width: vars.$mobile) {
    .hero-left {
      width: 100%;
      padding: vars.$padding-small;
    }
  }
}
